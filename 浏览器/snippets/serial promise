var arr = [1, 2, 3, 4, 5];

function makePromise(value) {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            resolve(value)
        }, Math.random() * 1000);
    })
}

var promiseArr = arr.map(item => makePromise(item));

function callPromise(paramArr) {
    var res = [];
    let cursor = 0;
    return new Promise((resolve, reject) => {
        paramArr.reduce((total, current, index) => {
            
            return total.then(() => {
                return current.then((value) => {
                    res[cursor++] = value;
                    const notEmptyArr = res.filter(item => item);
                    if(notEmptyArr.length === paramArr.length) {
                        resolve(res);    
                    }
                    
                })
                
            })
        }, Promise.resolve())
    })
}

callPromise(promiseArr).then(data => {
    console.log("data", data);
}).catch(e => {
    console.log("e")
})

